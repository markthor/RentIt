@using RentItMvc.Models

@model Tuple<List<GuiChannel>, AdvancedSearchModel>

@Html.Partial("AdvancedSearch", new Tuple<int, int>(Model.Item2.StartIndex, Model.Item2.EndIndex))

<h2>Search Results</h2>


<div id="searchResultsDiv" class="row-fluid">
    <table class="table table-hover">
        <tr>
            <th style="width: 215px">Name</th>
            <th style="width: 355px">Description</th>
            <th style="width: 60px; text-align: center" title="Number of subscribers">
                <i class="icon-ok" />
            </th>
            <th style="width: 60px; text-align: center" title="Times played">
                <i class="icon-play" />
            </th>
            <th></th>
            <th></th>
        </tr>
        @foreach (var channel in Model.Item1)
        {
            <tr>
                <td>
                    <div style="width:215px" title="@channel.Name">
                        @Html.ActionLink(channel.Name, "SelectChannel", "Channel", new { channelId = channel.Id, userId = Session["userId"] }, new { @class = "link-overflow", style = "width: 220px" })
                    </div>
                </td>
                <td>
                    <div class="text-overflow" style="width:355px" title="@channel.Description">
                        @channel.Description
                    </div>
                </td>
                <td>
                    <div style="width: 60px;" class="text-center" title="Number of subscribers">
                        <span class="badge badge-success">
                            @channel.Subscribers
                        </span>
                    </div>
                </td>
                <td>
                    <div style="width: 60px;" class="text-center" title="Times played">
                        <span class="badge badge-inverse">
                            @channel.Plays
                        </span>
                    </div>
                </td>

                <td>
                    <div style="width: 40px;" class="text-center">
                        @if (RentItMvc.Controllers.ChannelController.IsChannelPlaying(channel.Id))
                        {
                            <button class="btn btn-small" id="playButton" title="Listen to this channel" value="@channel.Id&userId=@Session["userId"]" onclick=" openPlayer(this.value) ">
                                <i class="icon-play"></i>
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-small disabled" id="playButton" disabled="disabled" title="Sorry, the channel is not playing.">
                                <i class="icon-play"></i>
                            </button>
                        }


                    </div>
                </td>
                <td>
                    <div style="width: 40px;" class="text-center">
                        @{
                        if (Session["userId"] != null && RentItMvc.Controllers.AccountController.IsSubscribed(channel.Id, (int)Session["userId"]))
                        {
                            <button class="btn btn-small btn-warning" title="Unsubscribe" onclick="location.href ='@(Url.Action("UnSubscribe", "Account", new { channelId = channel.Id, userId = Session["userId"] }))'">
                                <i class="icon-remove icon-white"></i>
                            </button>
                        }
                        else
                        {                     
                            <button class="btn btn-small btn-success" title="Subscribe" onclick="location.href ='@(Url.Action("Subscribe", "Account", new { channelId = channel.Id, userId = Session["userId"] }))'">
                                <i class="icon-ok icon-white"></i>
                            </button>
                        }
                        }
                    </div>
                </td>
            </tr>
        }
    </table>

    @if (Model.Item2.StartIndex == 0)
    {
        <button class="btn btn-primary pull-left disabled" disabled="disabled" style="margin-left: 9px"><<</button>
    }
    else
    {
        using (Ajax.BeginForm("AdvancedSearchWithArgs", "Channel", new { StartIndex = Model.Item2.StartIndex - 10, EndIndex = Model.Item2.EndIndex - 10 }, new AjaxOptions { UpdateTargetId = "searchResultsDiv" }))
        {
        <input data-val="true" id="MaxAmountOfComments" name="MaxAmountOfComments" type="hidden" value="@Model.Item2.MaxAmountOfComments">
        <input data-val="true" id="MaxAmountOfPlays" name="MaxAmountOfPlays" type="hidden" value="@Model.Item2.MaxAmountOfPlays">
        <input data-val="true" id="MaxAmountOfSubscribers" name="MaxAmountOfSubscribers" type="hidden" value="@Model.Item2.MaxAmountOfSubscribers">
        <input data-val="true" id="MaxAmountOfVotes" name="MaxAmountOfVotes" type="hidden" value="@Model.Item2.MaxAmountOfVotes">
        <input data-val="true" id="MinAmountOfComments" name="MinAmountOfComments" type="hidden" value="@Model.Item2.MinAmountOfComments">
        <input data-val="true" id="MinAmountOfPlays" name="MinAmountOfPlays" type="hidden" value="@Model.Item2.MinAmountOfPlays">
        <input data-val="true" id="MinAmountOfSubscribers" name="MinAmountOfSubscribers" type="hidden" value="@Model.Item2.MinAmountOfSubscribers">
        <input data-val="true" id="IMinAmountOfVotes" name="MinAmountOfVotes" type="hidden" value="@Model.Item2.MinAmountOfVotes">
        <input id="SearchString" name="SearchString" type="hidden" value="@Model.Item2.SearchString">
        <input id="SortingBy" name="SortingBy" type="hidden" value="@Model.Item2.SortingBy">
        <input id="SortingKey" name="SortingKey" type="hidden" value="@Model.Item2.SortingKey">
        <button class="btn btn-primary pull-left" type="submit"><<</button>
        }
    }

    @if ((Model.Item1.Count + Model.Item2.StartIndex) == RentItMvc.Controllers.ChannelController.TotalChannelsWithFilter(Model.Item2))
    {
        <button class="btn btn-primary pull-right disabled" disabled="disabled">>></button>
    }
    else
    {
        using (Ajax.BeginForm("AdvancedSearchWithArgs", "Channel", new { StartIndex = Model.Item2.StartIndex + 10, EndIndex = Model.Item2.EndIndex + 10 }, new AjaxOptions { UpdateTargetId = "searchResultsDiv" }))
        {
        <input data-val="true" id="MaxAmountOfComments" name="MaxAmountOfComments" type="hidden" value="@Model.Item2.MaxAmountOfComments">
        <input data-val="true" id="MaxAmountOfPlays" name="MaxAmountOfPlays" type="hidden" value="@Model.Item2.MaxAmountOfPlays">
        <input data-val="true" id="MaxAmountOfSubscribers" name="MaxAmountOfSubscribers" type="hidden" value="@Model.Item2.MaxAmountOfSubscribers">
        <input data-val="true" id="MaxAmountOfVotes" name="MaxAmountOfVotes" type="hidden" value="@Model.Item2.MaxAmountOfVotes">
        <input data-val="true" id="MinAmountOfComments" name="MinAmountOfComments" type="hidden" value="@Model.Item2.MinAmountOfComments">
        <input data-val="true" id="MinAmountOfPlays" name="MinAmountOfPlays" type="hidden" value="@Model.Item2.MinAmountOfPlays">
        <input data-val="true" id="MinAmountOfSubscribers" name="MinAmountOfSubscribers" type="hidden" value="@Model.Item2.MinAmountOfSubscribers">
        <input data-val="true" id="MinAmountOfVotes" name="MinAmountOfVotes" type="hidden" value="@Model.Item2.MinAmountOfVotes">
        <input id="SearchString" name="SearchString" type="hidden" value="@Model.Item2.SearchString">
        <input id="SortingBy" name="SortingBy" type="hidden" value="@Model.Item2.SortingBy">
        <input id="SortingKey" name="SortingKey" type="hidden" value="@Model.Item2.SortingKey">
        <button class="btn btn-primary pull-right" type="submit">>></button>
        }
    }
</div>
