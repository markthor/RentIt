//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentItClient.RentItService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchArgs", Namespace="http://schemas.datacontract.org/2004/07/RentItServer")]
    [System.SerializableAttribute()]
    public partial class SearchArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Channel", Namespace="http://schemas.datacontract.org/2004/07/RentItServer")]
    [System.SerializableAttribute()]
    public partial class Channel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Track", Namespace="http://schemas.datacontract.org/2004/07/RentItServer")]
    [System.SerializableAttribute()]
    public partial class Track : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DownvotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpvotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Downvotes {
            get {
                return this.DownvotesField;
            }
            set {
                if ((this.DownvotesField.Equals(value) != true)) {
                    this.DownvotesField = value;
                    this.RaisePropertyChanged("Downvotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Upvotes {
            get {
                return this.UpvotesField;
            }
            set {
                if ((this.UpvotesField.Equals(value) != true)) {
                    this.UpvotesField = value;
                    this.RaisePropertyChanged("Upvotes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackInfo", Namespace="http://schemas.datacontract.org/2004/07/RentItServer")]
    [System.SerializableAttribute()]
    public partial class TrackInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/RentItServer")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentItService.IRentItService")]
    public interface IRentItService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/CreateChannel", ReplyAction="http://tempuri.org/IRentItService/CreateChannelResponse")]
        int CreateChannel(string channelName, int userId, string description, int[] genres);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetChannelIds", ReplyAction="http://tempuri.org/IRentItService/GetChannelIdsResponse")]
        int[] GetChannelIds(string channelName, RentItClient.RentItService.SearchArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetChannel", ReplyAction="http://tempuri.org/IRentItService/GetChannelResponse")]
        RentItClient.RentItService.Channel GetChannel(int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/ModifyChannel", ReplyAction="http://tempuri.org/IRentItService/ModifyChannelResponse")]
        RentItClient.RentItService.Channel ModifyChannel(int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/DeleteChannel", ReplyAction="http://tempuri.org/IRentItService/DeleteChannelResponse")]
        void DeleteChannel(int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/Login", ReplyAction="http://tempuri.org/IRentItService/LoginResponse")]
        int Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/CreateUser", ReplyAction="http://tempuri.org/IRentItService/CreateUserResponse")]
        int CreateUser(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/UploadTrack", ReplyAction="http://tempuri.org/IRentItService/UploadTrackResponse")]
        void UploadTrack(RentItClient.RentItService.Track track, int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/RemoveTrack", ReplyAction="http://tempuri.org/IRentItService/RemoveTrackResponse")]
        void RemoveTrack(int trackId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/VoteTrack", ReplyAction="http://tempuri.org/IRentItService/VoteTrackResponse")]
        void VoteTrack(int rating, int userId, int trackId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetTrackIds", ReplyAction="http://tempuri.org/IRentItService/GetTrackIdsResponse")]
        int[] GetTrackIds(int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetTrackInfo", ReplyAction="http://tempuri.org/IRentItService/GetTrackInfoResponse")]
        RentItClient.RentItService.TrackInfo GetTrackInfo(int trackId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/Comment", ReplyAction="http://tempuri.org/IRentItService/CommentResponse")]
        void Comment([System.ServiceModel.MessageParameterAttribute(Name="comment")] string comment1, int userId, int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetCommentIds", ReplyAction="http://tempuri.org/IRentItService/GetCommentIdsResponse")]
        int[] GetCommentIds(int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetComment", ReplyAction="http://tempuri.org/IRentItService/GetCommentResponse")]
        RentItClient.RentItService.Comment GetComment(int commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/Subscribe", ReplyAction="http://tempuri.org/IRentItService/SubscribeResponse")]
        void Subscribe(int userId, int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/UnSubscribe", ReplyAction="http://tempuri.org/IRentItService/UnSubscribeResponse")]
        void UnSubscribe(int userId, int channelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentItService/GetChannelPort", ReplyAction="http://tempuri.org/IRentItService/GetChannelPortResponse")]
        int GetChannelPort(int channelId, int ipAddress, int port);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentItServiceChannel : RentItClient.RentItService.IRentItService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentItServiceClient : System.ServiceModel.ClientBase<RentItClient.RentItService.IRentItService>, RentItClient.RentItService.IRentItService {
        
        public RentItServiceClient() {
        }
        
        public RentItServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentItServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentItServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentItServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateChannel(string channelName, int userId, string description, int[] genres) {
            return base.Channel.CreateChannel(channelName, userId, description, genres);
        }
        
        public int[] GetChannelIds(string channelName, RentItClient.RentItService.SearchArgs args) {
            return base.Channel.GetChannelIds(channelName, args);
        }
        
        public RentItClient.RentItService.Channel GetChannel(int channelId) {
            return base.Channel.GetChannel(channelId);
        }
        
        public RentItClient.RentItService.Channel ModifyChannel(int channelId) {
            return base.Channel.ModifyChannel(channelId);
        }
        
        public void DeleteChannel(int channelId) {
            base.Channel.DeleteChannel(channelId);
        }
        
        public int Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public int CreateUser(string username, string password, string email) {
            return base.Channel.CreateUser(username, password, email);
        }
        
        public void UploadTrack(RentItClient.RentItService.Track track, int channelId) {
            base.Channel.UploadTrack(track, channelId);
        }
        
        public void RemoveTrack(int trackId) {
            base.Channel.RemoveTrack(trackId);
        }
        
        public void VoteTrack(int rating, int userId, int trackId) {
            base.Channel.VoteTrack(rating, userId, trackId);
        }
        
        public int[] GetTrackIds(int channelId) {
            return base.Channel.GetTrackIds(channelId);
        }
        
        public RentItClient.RentItService.TrackInfo GetTrackInfo(int trackId) {
            return base.Channel.GetTrackInfo(trackId);
        }
        
        public void Comment(string comment1, int userId, int channelId) {
            base.Channel.Comment(comment1, userId, channelId);
        }
        
        public int[] GetCommentIds(int channelId) {
            return base.Channel.GetCommentIds(channelId);
        }
        
        public RentItClient.RentItService.Comment GetComment(int commentId) {
            return base.Channel.GetComment(commentId);
        }
        
        public void Subscribe(int userId, int channelId) {
            base.Channel.Subscribe(userId, channelId);
        }
        
        public void UnSubscribe(int userId, int channelId) {
            base.Channel.UnSubscribe(userId, channelId);
        }
        
        public int GetChannelPort(int channelId, int ipAddress, int port) {
            return base.Channel.GetChannelPort(channelId, ipAddress, port);
        }
    }
}
